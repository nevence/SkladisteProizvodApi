// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace SkladisteProizvodApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240219130631_NovaMigracija")]
    partial class NovaMigracija
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Proizvod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProizvodId");

                    b.Property<int?>("Cena")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proizvodi");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Cena = 128000,
                            ImageURL = "/images/placeholder.png",
                            Kategorija = "Mobilni telefon",
                            Naziv = "Samsung Galaxy S24"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Cena = 88000,
                            ImageURL = "/images/placeholder.png",
                            Kategorija = "Mobilni telefon",
                            Naziv = "Xiaomi Note 13 Pro"
                        });
                });

            modelBuilder.Entity("Entities.Models.Skladiste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SkladisteId");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Kapacitet")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Popunjeno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skladista");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Adresa = "Knjazevacka 16",
                            Kapacitet = 5000,
                            Naziv = "Gigatron Nis",
                            Popunjeno = 50
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Adresa = "Nikole Pasica 10",
                            Kapacitet = 4200,
                            Naziv = "Gigatron Kragujevac",
                            Popunjeno = 0
                        });
                });

            modelBuilder.Entity("Entities.Models.SkladisteProizvod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<Guid>("ProizvodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkladisteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodId");

                    b.HasIndex("SkladisteId");

                    b.ToTable("SkladisteProizvodi");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5156b79f-5ba3-4734-b30f-7592c231c432"),
                            Kolicina = 50,
                            ProizvodId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            SkladisteId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a")
                        });
                });

            modelBuilder.Entity("Entities.Models.SkladisteProizvod", b =>
                {
                    b.HasOne("Entities.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");

                    b.Navigation("Skladiste");
                });
#pragma warning restore 612, 618
        }
    }
}
